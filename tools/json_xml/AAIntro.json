{"document": {"@ids": "data-and-algorithm-analysis", "@names": "data\\ and\\ algorithm\\ analysis", "@source": "<string>", "@title": "Data and Algorithm Analysis", "title": "Data and Algorithm Analysis", "comment": [{"@xml:space": "preserve", "#text": "This file is part of the OpenDSA eTextbook project. See"}, {"@xml:space": "preserve", "#text": "http://algoviz.org/OpenDSA for more details."}, {"@xml:space": "preserve", "#text": "Copyright (c) 2012-2016 by the OpenDSA Project Contributors, and"}, {"@xml:space": "preserve", "#text": "distributed under an MIT open source license."}], "raw": {"@format": "xml", "@xml:space": "preserve", "avmetadata": "null"}, "section": [{"@ids": "introduction", "@names": "introduction", "title": "Introduction", "paragraph": "This eTextbook is intended for a senior-level course in Data and\nAlgorithm Analysis, or Theory of Algorithms."}, {"@ids": "prerequisites", "@names": "prerequisites", "title": "Prerequisites", "paragraph": ["This course assumes that you already have sufficient background in a\nnumber of Computer Science topics", "You should have had a course in Discrete Math, covering at least the\nfollowing:", "You should have had a course in Data Structures to cover at least the\nfollowing:"], "bullet_list": [{"@bullet": "*", "list_item": [{"paragraph": "Basic proof techniques like proof by contradition and induction."}, {"paragraph": "Basic techniques for solving summations and recurrence relations"}, {"paragraph": "Set theory and relations"}]}, {"@bullet": "*", "list_item": [{"paragraph": {"math": "\\Theta", "#text": "Basic algorithm analysis, including big-oh, big-Omega, and\n notations."}}, {"paragraph": "Basic data structures and algorithms including lists, search\nstructures such as BSTs, sorting algorithms, heaps, hashing, and\nbasic graph algorithms."}]}]}, {"@ids": "what-we-will-do", "@names": "what\\ we\\ will\\ do", "title": "What we will do", "paragraph": "Major topics/goals for this course include:", "bullet_list": {"@bullet": "*", "list_item": [{"paragraph": "Getting a good understanding of upper and (especially) lower bounds\nfor an algorithm or problem."}, {"paragraph": "Lower bounds proofs."}, {"paragraph": "Analysis techniques, including solving a lot of summations and\nrecurrence relations."}, {"paragraph": "Reductions, most importantly NP-completeness theory."}, {"paragraph": "A little bit of computability theory as a bonus."}]}}, {"@ids": "process", "@names": "process", "title": "Process", "paragraph": ["The primary work in this course will come from the weekly homework\nsets.\nThey will typically consist of three problems.\nYou should expect that a lot of them will be fairly hard.", "The intention of the course design is that you will work with a\npartner on the homework.\nUnderstanding this course content is hard.\nFiguring out the problem solutions is intended to be hard.\nThis works best if you can bounce ideas off of someone else, and\nactively work together toward a final solution.\nIf nothing else, being a skeptical reviewer is a key contribution.\nRecognizing that an answer is no good, or incomplete, is crucial to\nsucceeding in this class."]}]}}