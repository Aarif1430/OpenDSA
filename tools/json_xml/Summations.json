{"document": {"@dupnames": "summations", "@ids": "summations", "@source": "<string>", "@title": "Summations", "title": "Summations", "subtitle": {"@dupnames": "summations", "@ids": "id1", "#text": "Summations"}, "comment": [{"@xml:space": "preserve", "#text": "This file is part of the OpenDSA eTextbook project. See"}, {"@xml:space": "preserve", "#text": "http://algoviz.org/OpenDSA for more details."}, {"@xml:space": "preserve", "#text": "Copyright (c) 2012-2016 by the OpenDSA Project Contributors, and"}, {"@xml:space": "preserve", "#text": "distributed under an MIT open source license."}], "raw": [{"@format": "xml", "@xml:space": "preserve", "avmetadata": "null"}, {"@format": "xml", "@xml:space": "preserve", "odsalink": "AV/Background/SummationOneToNCON.css"}, {"@format": "xml", "@xml:space": "preserve", "odsalink": "AV/Background/SummationTwoPowerICON.css"}, {"@format": "xml", "@xml:space": "preserve", "inlineav": {"@type": "ss", "@exer_name": "SummationOneToNCON", "@long_name": "SummationOneToNCON", "@points": "0", "@required": "True", "@threshold": "1.0"}}, {"@format": "xml", "@xml:space": "preserve", "inlineav": {"@type": "ss", "@exer_name": "SummationTwoPowerICON", "@long_name": "SummationTwoPowerICON", "@points": "0", "@required": "True", "@threshold": "1.0"}}, {"@format": "xml", "@xml:space": "preserve", "odsascript": "AV/Background/SummationOneToNCON.js"}, {"@format": "xml", "@xml:space": "preserve", "odsascript": "AV/Background/SummationTwoPowerICON.js"}], "paragraph": [{"title_reference": "summation", "#text": "Most programs contain loop constructs.\nWhen analyzing running time costs for programs with loops, we\nneed to add up the costs for each time the loop is executed.\nThis is an example of a .\nSummations are simply the sum of costs for some function applied to a\nrange of parameter values.\nSummations are typically written with the following \"Sigma\"\nnotation:"}, {"title_reference": ["f(i)", "sum", "i=1", "i", "sum", "n", "i", "f(i)", "i", "n", "f(1) + f(2) + cdots + f(n-1) + f(n)", "sum_{i=1}^{n} f(i)"], "#text": "This notation indicates that we are summing the value of\n over some range of (integer) values.\nThe parameter to the expression and its initial value are indicated\nbelow the  symbol.\nHere, the notation  indicates that the parameter is\n and that it begins with the value 1.\nAt the top of the  symbol is the expression .\nThis indicates the maximum value for the parameter .\nThus, this notation means to sum the values of  as\n ranges across the integers from 1 through .\nThis can also be written\n.\nWithin a sentence, Sigma notation is typeset as\n."}, {"title_reference": ["closed-form solution", "sum_{i=1}^{n} 1", "n", "i", "n", "n", "n", "n"], "#text": "Given a summation, you often wish to replace it with an algebraic\nequation with the same value as the summation.\nThis is known as a ,\nand the process of replacing the summation with its closed-form\nsolution is known as solving the summation.\nFor example, the summation\n\nis simply the expression \"1\" summed  times\n(remember that  ranges from 1 to ).\nBecause the sum of  1s is ,\nthe closed-form solution is ."}, "Here is an explanation about the closed form solution of one summation\nthat you will see many times in this book.\nSince this appears so often, it will help you later if you can get\ncomfortable with it.", "Here is a list of useful summations, along with their closed-form solutions.", "As special cases to this last summation, we have the following two:", {"title_reference": "sum7", "#text": "As a corollary to ,"}, "Finally,", {"title_reference": ["n", "Harmonic Series", "{cal H}_n", "log_e n", "log_e n + 1", "n"], "#text": "The sum of reciprocals from 1 to , called the\n and written , has a value\nbetween  and .\nTo be more precise, as  grows,\nthe summation grows closer to"}, {"title_reference": "gamma", "#text": "where  is Euler's constant and has the value 0.5772..."}, {"title_reference": "proof by induction <Proofs>", "#text": "Most of these equalities can be proved easily by a\n.\nUnfortunately, induction does not help us derive a closed-form\nsolution.\nInduction only confirms when a proposed closed-form solution is\ncorrect."}], "math_block": [{"@xml:space": "preserve", "#text": "\\sum_{i=1}^{n} f(i)."}, {"@xml:space": "preserve", "#text": "\\sum_{i = 1}^{n} i &=& \\frac{n (n+1)}{2}."}, {"@xml:space": "preserve", "#text": "\\sum_{i = 1}^{n} i^2 &=& \\frac{2 n^3 + 3 n^2 + n}{6} =\n\\frac{n(2n + 1)(n + 1)}{6}."}, {"@xml:space": "preserve", "#text": "\\sum_{i = 1}^{\\log n} n &=& n \\log n."}, {"@xml:space": "preserve", "#text": "\\sum_{i = 0}^\\infty a^i &=& \\frac{1}{1-a}\\ \\mbox{for}\n\\ 0 < a < 1."}, {"@xml:space": "preserve", "#text": "\\sum_{i=0}^{n} a^i &=& \\frac{a^{n+1} - 1}{a - 1}\\ \\mbox{for}\n\\ a \\neq 1."}, {"@xml:space": "preserve", "#text": "\\sum_{i = 1}^{n} \\frac{1}{2^i} &=& 1 - \\frac{1}{2^n},"}, {"@xml:space": "preserve", "#text": "\\sum_{i = 0}^{n} 2^i &=& 2^{n+1} - 1."}, {"@xml:space": "preserve", "#text": "\\sum_{i = 0}^{\\log n} 2^i &=& 2^{\\log n + 1} - 1 = 2n - 1."}, {"@xml:space": "preserve", "#text": "\\sum_{i=1}^{n} \\frac{i}{2^i} &=& 2 - \\frac{n+2}{2^n}."}, {"@xml:space": "preserve", "#text": "{\\cal H}_n \\approx \\log_e n + \\gamma + \\frac{1}{2n},"}]}}