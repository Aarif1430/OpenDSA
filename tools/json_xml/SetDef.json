{"document": {"@ids": "sets-and-relations", "@names": "sets\\ and\\ relations", "@source": "<string>", "@title": "Sets and Relations", "title": "Sets and Relations", "comment": [{"@xml:space": "preserve", "#text": "This file is part of the OpenDSA eTextbook project. See"}, {"@xml:space": "preserve", "#text": "http://algoviz.org/OpenDSA for more details."}, {"@xml:space": "preserve", "#text": "Copyright (c) 2012-2016 by the OpenDSA Project Contributors, and"}, {"@xml:space": "preserve", "#text": "distributed under an MIT open source license."}], "raw": {"@format": "xml", "@xml:space": "preserve", "avmetadata": "null"}, "section": [{"@ids": "set-notation", "@names": "set\\ notation", "title": "Set Notation", "paragraph": ["The concept of a set in the mathematical sense has wide\napplication in computer science.\nThe notations and techniques of set theory are commonly used\nwhen describing and implementing algorithms because the abstractions\nassociated with sets often help to clarify and simplify algorithm\ndesign.", {"title_reference": ["set", "members <member>", "elements <element>", "base type", "primitive element"], "math": ["\\mathbf{P}", "\\mathbf{P}"], "#text": "A  is a collection of distinguishable\n or .\nThe members are typically drawn from some larger population known as\nthe .\nEach member of a set is either a  of the\nbase type or is a set itself.\nThere is no concept of duplication in a set.\nEach value from the base type is either in the set or not in the set.\nFor example, a set named  might consist of the three\nintegers 7, 11, and 42.\nIn this case, 's members are 7, 11, and 42, and the\nbase type is integer."}, "The following table shows the symbols commonly used to express sets\nand their relationships.", {"math": ["\\mathbf{P}", "\\mathbf{Q}"], "#text": "Here are some examples of this notation in use.\nFirst define two sets,  and ."}, {"math": ["|\\mathbf{P}| = 3", "\\mathbf{P}", "|\\mathbf{Q}| = 2", "\\mathbf{Q}", "\\mathbf{P}", "\\mathbf{Q}", "\\mathbf{P} \\cup \\mathbf{Q}", "\\mathbf{P}", "\\mathbf{Q}", "\\mathbf{P}", "\\mathbf{Q}", "\\mathbf{P} \\cap \\mathbf{Q}", "\\mathbf{P}", "\\mathbf{Q}", "\\mathbf{P}", "\\mathbf{Q}", "\\mathbf{P} - \\mathbf{Q}", "\\mathbf{P}", "\\mathbf{Q}", "\\mathbf{P} \\cup \\mathbf{Q} = \\mathbf{Q} \\cup \\mathbf{P}", "\\mathbf{P} \\cap \\mathbf{Q} = \\mathbf{Q} \\cap \\mathbf{P}", "\\mathbf{P} - \\mathbf{Q} \\neq \\mathbf{Q} - \\mathbf{P}", "\\mathbf{Q} - \\mathbf{P}  = \\{10\\}", "\\mathbf{P}", "\\mathbf{P}"], "#text": "(because  has three\nmembers) and \n(because  has two members).\nThe union of  and , written\n, is the set of elements in either\n or , which is {2, 3, 5, 10}.\nThe intersection of  and ,\nwritten , is the set of elements that\nappear in both  and , which is {5}.\nThe set difference of  and ,\nwritten ,\nis the set of elements that occur in  but not in\n, which is {2, 3}.\nNote that\n\nand that\n,\nbut in general\n.\nIn this example,\n.\nFinally, the set {5, 3, 2} is indistinguishable from set\n, because sets have no concept of order.\nLikewise, set {2, 3, 2, 5} is also indistinguishable from\n, because sets have no concept of duplicate elements."}, {"title_reference": "powerset", "math": ["\\mathbf{S}", "\\mathbf{S}", "\\mathbf{S} = \\{ a, b, c \\}", "\\mathbf{S}"], "#text": "The  of a set  is the set of all\npossible subsets for .\nConsider the set .\nThe powerset of  is"}, {"title_reference": "bag", "footnote_reference": {"@auto": "1", "@ids": "id1", "@refid": "id2", "#text": "1"}, "#text": "A collection of elements with no order (like a set), but with\nduplicate-valued elements is called a\n .\nTo distinguish bags from sets, we will use square brackets [] around\na bag's elements.\nFor example, bag [3, 4, 5, 4] is distinct from bag [3, 4, 5],\nwhile set {3, 4, 5, 4} is indistinguishable from set\n{3, 4, 5}.\nHowever, bag [3, 4, 5, 4] is indistinguishable from bag\n[3, 4, 4, 5]."}, {"title_reference": ["sequence", "tuple", "vector"], "math": ["\\langle\\rangle", "\\langle3, 4, 5, 4\\rangle", "\\langle3, 5, 4, 4\\rangle", "\\langle3, 4, 5, 4\\rangle", "\\langle3, 4, 5\\rangle"], "#text": "A  is a collection of elements with an order, and\nwhich may contain duplicate-valued elements.\nA sequence is also sometimes called a  or a\n.\nIn a sequence, there is a 0th element, a 1st element, 2nd element, and\nso on.\nWe will use angle brackets  to enclose the\nelements of a sequence.\nFor example,  is a sequence.\nNote that sequence  is distinct from\nsequence , and both are distinct from\nsequence ."}], "target": {"@refid": "setnotation"}, "topic": {"@ids": "setnotation", "@names": "setnotation", "title": "Table", "math_block": {"@xml:space": "preserve", "#text": "\\begin{array}{l|l}\n\\{1, 4\\}& \\mbox{A set composed of the members 1 and 4}\\\\\n\\{\\mathsf{x}\\, |\\, \\mathsf{x}\\ \\mbox{is a positive integer}\\}&\n   \\mbox{A set definition using a set former}\\\\\n&\\qquad \\mbox{Example: the set of all positive integers}\\\\\n\\mathsf{x} \\in \\mathbf{P}&\\mathsf{x}\\ \\mbox{is a member of set}\\ \\mathbf{P}\\\\\n\\mathsf{x} \\notin \\mathbf{P}&\\mathsf{x}\\ \\mbox{is not a member of set}\\ \\mathbf{P}\\\\\n\\emptyset&\\mbox{The null or empty set}\\\\\n|\\mathbf{P}|& \\mbox{Cardinality: size of set}\\ \\mathbf{P}\n           \\mbox{or number of members for set}\\ \\mathbf{P}\\\\\n\\mathbf{P}\\,\\subseteq\\,\\mathbf{Q},\n  \\mathbf{Q}\\,\\supseteq\\,\\mathbf{P}&\n  \\mbox{Set}\\ \\mathbf{P}\\ \\mbox{is included in set}\\ \\mathbf{Q},\\\\\n&\\qquad \\mbox{set}\\ \\mathbf{P}\\ \\mbox{is a subset of set}\\ \\mathbf{Q},\\\\\n&\\qquad \\mbox{set}\\ \\mathbf{Q}\\ \\mbox{is a superset of set}\\ \\mathbf{P}\\\\\n\\mathbf{P}\\,\\cup\\,\\mathbf{Q}      &\n  \\mbox{Set Union: all elements appearing in}\n  \\ \\mathbf{P}\\ \\mbox{OR}\\ \\mathbf{Q}\\\\\n\\mathbf{P}\\,\\cap\\,\\mathbf{Q}      &\n  \\mbox{Set Intersection: all elements appearing in}\\ \\mbox{P}\n  \\ \\mbox{AND}\\ \\mathbf{Q}\\\\\n\\mathbf{P}\\,-\\,\\mathbf{Q} &\n  \\mbox{Set difference: all elements of set}\n  \\ \\mathbf{P}\\ \\mbox{NOT in set}\\ \\mathbf{Q}\\\\\n\\end{array}"}}, "math_block": [{"@xml:space": "preserve", "#text": "\\mathbf{P} = \\{2, 3, 5\\}, \\qquad \\mathbf{Q} = \\{5, 10\\}."}, {"@xml:space": "preserve", "#text": "\\{ \\emptyset,\\ \\{a\\},\\ \\{b\\},\\ \\{c\\},\\ \\{a, b\\},\n\\ \\{a, c\\},\\ \\{b, c\\},\\ \\{a, b, c\\}\\}."}], "footnote": {"@auto": "1", "@backrefs": "id1", "@ids": "id2", "@names": "1", "label": "1", "paragraph": {"title_reference": "multilist <multilist> <Multilists>", "#text": "The object referred to here as a\nbag is sometimes called a\n.\nBut, the term multilist also refers to a list that may contain\nsublists."}}}, {"@ids": "relations", "@names": "relations", "title": "Relations", "paragraph": [{"title_reference": "relation", "math": ["R", "\\mathbf{S}", "\\mathbf{S}", "\\mathbf{S}", "\\{a, b, c\\}"], "#text": "A   over set  is a set of\nordered pairs from .\nAs an example of a relation, if  is\n, then"}, "is a relation, and", {"math": ["\\langle x, y\\rangle", "R", "xRy", "<", "\\langle1, 3\\rangle", "\\langle2, 23\\rangle", "\\langle3, 2\\rangle", "\\langle2, 2\\rangle", "1<3"], "#text": "is a different relation.\nIf tuple  is in relation , we may\nuse the infix notation .\nWe often use relations such as the less than operator () on\nthe natural numbers, which includes ordered pairs such as\n and\n, but not  or\n.\nRather than writing the relationship in terms of ordered pairs, we\ntypically use an infix notation for such relations, writing ."}, {"math": ["R", "\\mathbf{S}"], "#text": "Define the properties of relations as follows, with  a\nbinary relation over set ."}, {"math": ["<", "aRb", "bRa", "\\leq", "="], "#text": "As examples, for the natural numbers,  is\nirreflexive (because :math`aRa` is never true),\nantisymmetric (because there is no case where  and\n), and transitive.\nRelation  is reflexive, antisymmetric, and transitive.\nRelation  is reflexive, symmetric (and antisymmetric!),\nand transitive.\nFor people, the relation \"is a sibling of\" is symmetric and\ntransitive.\nIf we define a person to be a sibling of himself, then it is\nreflexive; if we define a person not to be a sibling of himself, then\nit is not reflexive."}], "math_block": [{"@xml:space": "preserve", "#text": "\\{ \\langle a, c\\rangle, \\langle b, c\\rangle, \\langle c, b\\rangle \\}"}, {"@xml:space": "preserve", "#text": "\\{ \\langle a, a\\rangle, \\langle a, c\\rangle, \\langle b, b\\rangle,\n\\langle b, c\\rangle, \\langle c, c\\rangle \\}"}], "bullet_list": {"@bullet": "*", "list_item": [{"paragraph": {"math": ["R", "aRa", "a \\in \\mathbf{S}"], "title_reference": "reflexive", "#text": "is  if \nfor all ."}}, {"paragraph": {"math": ["R", "aRa", "a \\in \\mathbf{S}"], "title_reference": "irreflexive", "#text": "is  if  is not true\nfor all ."}}, {"paragraph": {"math": ["R", "aRb", "bRa", "a, b \\in \\mathbf{S}"], "title_reference": "symmetric", "#text": "is  if whenever ,\nthen , for all ."}}, {"paragraph": {"math": ["R", "aRb", "bRa", "a = b", "a, b \\in \\mathbf{S}"], "title_reference": "antisymmetric", "#text": "is  if whenever \nand , then , for all\n."}}, {"paragraph": {"math": ["R", "aRb", "bRc", "aRc", "a, b, c \\in \\mathbf{S}"], "title_reference": "transitive", "#text": "is  if whenever  and\n, then , for all\n."}}]}, "raw": {"@format": "xml", "@xml:space": "preserve", "avembed": {"@type": "ka", "@exer_name": "SetTFrelation", "@long_name": "SetTFrelation", "@points": "1.0", "@required": "True", "@threshold": "5"}}}, {"@ids": "equivalence-relations", "@names": "equivalence\\ relations", "title": "Equivalence Relations", "paragraph": {"math": ["R", "\\mathbf{S}", "a", "b", "a \\equiv b", "\\mathbf{S}", "\\mathbf{S}", "\\mathbf{S}"], "title_reference": ["equivalence relation", "equivalence classes <equivalence class>", "partition", "disjoint", "equivalence relation", "UNION/FIND <UNION/FIND> <UnionFind>", "disjoint sets", "minimal cost spanning tree <MCST> <MCST>"], "#text": "is an  on set \nif it is reflexive, symmetric, and transitive.\nAn equivalence relation can be used to partition a set into\n.\nIf two elements  and  are equivalent to each other,\nwe write .\nA  of a set  is a collection of\nsubsets that are  from each other and whose union is\n.\nAn  on set  partitions\nthe set into disjoint subsets whose elements are equivalent.\nThe  algorithm efficiently\nmaintains equivalence classes on a set.\nOne application for such \ncomputing a ."}, "topic": [{"title": "Example", "paragraph": [{"math": ["=", "a"], "#text": "For the integers,  is an equivalence relation that\npartitions each element into a distinct subset.\nIn other words, for any integer , three things are true."}, {"math": ["a", "b", "c", "a = b", "b = a", "b = c"], "#text": "Of course, for distinct integers , , and \nthere are never cases where , , or\n.\nSo the requirements for symmetry and transitivity are never\nviolated, and therefore the relation is symmetric and transitive."}], "enumerated_list": {"@enumtype": "arabic", "@prefix": "", "@suffix": ".", "list_item": [{"paragraph": {"math": "a = a", "#text": ","}}, {"paragraph": {"math": ["a = b", "b = a"], "#text": "if  then , and"}}, {"paragraph": {"math": ["a = b", "b = c", "a = c"], "#text": "if  and , then ."}}]}}, {"title": "Example", "paragraph": "If we clarify the definition of sibling to mean that a person is\na sibling of him- or herself, then the sibling relation is an\nequivalence relation that partitions the set of people."}, {"title": "Example", "paragraph": {"title_reference": "modulus <MiscMath>", "math": ["x", "y", "x \\bmod m = y \\bmod m", "m = 4", "\\langle1, 5\\rangle", "1 \\bmod 4 = 5 \\bmod 4", "m"], "#text": "We can use the  function\nto define an equivalence relation.\nFor the set of integers, use the modulus function\nto define a binary relation such that two numbers\n and  are in the relation if and only if\n.\nThus, for ,  is in the\nrelation because .\nWe see that modulus used in this way defines an equivalence\nrelation on the integers, and this relation can be used to\npartition the integers into  equivalence classes.\nThis relation is an equivalence relation because"}, "enumerated_list": {"@enumtype": "arabic", "@prefix": "", "@suffix": ".", "list_item": [{"paragraph": {"math": ["x \\bmod m = x \\bmod m", "x"], "#text": "for all ;"}}, {"paragraph": {"math": ["x \\bmod m = y \\bmod m", "y \\bmod m = x \\bmod m"], "#text": "if ,\nthen ; and"}}, {"paragraph": {"math": ["x \\bmod m = y \\bmod m", "y \\bmod m = z \\bmod m", "x \\bmod m = z \\bmod m"], "#text": "if  and\n, then\n."}}]}}], "raw": {"@format": "xml", "@xml:space": "preserve", "avembed": {"@type": "ka", "@exer_name": "SetTFequivrel", "@long_name": "SetTFequivrel", "@points": "1.0", "@required": "True", "@threshold": "5"}}}, {"@ids": "partial-orders", "@names": "partial\\ orders", "title": "Partial Orders", "paragraph": {"title_reference": ["partial order", "non-strict partial order", "irreflexive", "strict partial order", "partially ordered set", "poset", "comparable", "total order", "linear order"], "math": ["x", "y", "R", "xRy", "yRx"], "#text": "A binary relation is called a\n if it is antisymmetric and transitive.\nIf the relation is reflexive, it is called a\n.\nIf the relation is , it is called a\n.\nThe set on which the partial order is defined is called a\n or a .\nElements  and  of a set are  under\na given relation  if either  or .\nIf every pair of distinct elements in a partial order are comparable,\nthen the order is called a  or ."}, "topic": [{"title": "Example", "paragraph": {"math": ["<", "\\leq", "<", "x", "y", "x \\neq y", "x < y", "y < x", "\\leq", "x", "y", "x \\neq y", "x \\leq y", "y \\leq x"], "#text": "For the integers, relations  and  define\npartial orders.\nOperation  is a total order because, for every pair of\nintegers  and  such that ,\neither  or .\nLikewise,  is a total order because,\nfor every pair of integers  and  such that\n, either  or ."}}, {"title": "Example", "paragraph": {"math": "\\{1, 2\\}\\subseteq\\{1, 2, 3\\}", "#text": "For the powerset of the integers, the subset\noperator defines a partial order (because it is antisymmetric and\ntransitive).\nFor example, .\nHowever, sets {1, 2} and {1, 3} are not comparable by the\nsubset operator, because neither is a subset of the other.\nTherefore, the subset operator does not define a total order on the\npowerset of the integers."}}], "raw": {"@format": "xml", "@xml:space": "preserve", "avembed": {"@type": "ka", "@exer_name": "SetTFpartialorder", "@long_name": "SetTFpartialorder", "@points": "1.0", "@required": "True", "@threshold": "5"}}}]}}