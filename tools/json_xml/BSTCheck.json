{"document": {"@ids": "a-hard-information-flow-problem", "@names": "a\\ hard\\ information\\ flow\\ problem", "@source": "<string>", "@title": "A Hard Information Flow Problem", "title": "A Hard Information Flow Problem", "comment": [{"@xml:space": "preserve", "#text": "This file is part of the OpenDSA eTextbook project. See"}, {"@xml:space": "preserve", "#text": "http://algoviz.org/OpenDSA for more details."}, {"@xml:space": "preserve", "#text": "Copyright (c) 2012-2016 by the OpenDSA Project Contributors, and"}, {"@xml:space": "preserve", "#text": "distributed under an MIT open source license."}], "raw": {"@format": "xml", "@xml:space": "preserve", "avmetadata": "null"}, "paragraph": "Sometimes, passing the right information up and down the tree to\ncontrol a recursive function gets complicated.\nThe information flow itself is simple enough, but deciding what to\npass might be tricky.\nHere is an example with checking to see if a given binary tree follows\nthe rules for a BST.", "topic": {"title": "Example", "paragraph": [{"title_reference": ["A", "A", "A", "A", "A"], "#text": "A more difficult example is illustrated by the following problem.\nGiven an arbitrary binary tree we wish to determine if,\nfor every node , are all nodes in 's left\nsubtree less than the value of , and are all nodes in\n's right subtree greater than the value of ?\n(This happens to be the definition for a binary search tree.)\nUnfortunately, to make this decision we need to know some context\nthat is not available just by looking at the node's parent or\nchildren."}, {"title_reference": ["Figure #BSTCheckFig", "A", "A", "A", "A"], "#text": "As shown by Figure ,\nit is not enough to verify that 's left child has a value\nless than that of , and that 's right child\nhas a greater value.\nNor is it enough to verify that  has a value consistent\nwith that of its parent.\nIn fact, we need to know information about what range of values is\nlegal for a given node.\nThat information might come from any of the node's ancestors.\nThus, relevant range information must be passed down the tree.\nWe can implement this function as follows."}], "target": {"@refid": "bstcheckfig"}, "raw": [{"@format": "xml", "@ids": "bstcheckfig", "@names": "bstcheckfig", "@xml:space": "preserve", "odsafig": "null"}, {"@format": "xml", "@xml:space": "preserve", "codeinclude": "null"}]}}}