{"document": {"@dupnames": "writing\\ a\\ recursive\\ function", "@ids": "writing-a-recursive-function", "@source": "<string>", "@title": "Writing a recursive function", "title": "Writing a recursive function", "subtitle": {"@dupnames": "writing\\ a\\ recursive\\ function", "@ids": "id1", "#text": "Writing a recursive function"}, "comment": [{"@xml:space": "preserve", "#text": "This file is part of the OpenDSA eTextbook project. See"}, {"@xml:space": "preserve", "#text": "http://algoviz.org/OpenDSA for more details."}, {"@xml:space": "preserve", "#text": "Copyright (c) 2012-2016 by the OpenDSA Project Contributors, and"}, {"@xml:space": "preserve", "#text": "distributed under an MIT open source license."}], "raw": [{"@format": "xml", "@xml:space": "preserve", "avmetadata": "null"}, {"@format": "xml", "@xml:space": "preserve", "odsalink": "AV/RecurTutor/recurWriteCON.css"}, {"@format": "xml", "@xml:space": "preserve", "inlineav": {"@type": "ss", "@exer_name": "recurWriteStepsCON", "@long_name": "recurWriteStepsCON", "@points": "0", "@required": "True", "@threshold": "1.0"}}, {"@format": "xml", "@xml:space": "preserve", "inlineav": {"@type": "ss", "@exer_name": "recurWriteSumCON", "@long_name": "recurWriteSumCON", "@points": "0", "@required": "True", "@threshold": "1.0"}}, {"@format": "xml", "@xml:space": "preserve", "odsascript": "AV/RecurTutor/recurWriteStepsCON.js"}, {"@format": "xml", "@xml:space": "preserve", "odsascript": "AV/RecurTutor/recurWriteSumCON.js"}], "paragraph": ["Solving a \"big\" problem recursively means to solve one or more smaller\nversions of the problem, and using those solutions of the smaller\nproblems to solve the \"big\" problem.\nIn particular, solving problems recursively means that\nsmaller versions of the problem are solved in a similar way.\nFor example, consider the problem of summing values of an array.\nWhat's the difference between summing the first 50 elements in an\narray versus summing the first 100 elements?\nYou would use the same technique.\nYou can even use the solution to the smaller problem to help you solve\nthe larger problem.", "Here are the basic four steps that you need to write any recursive function.", {"literal": "Sum", "#text": "Now le't see some different ways that we could write  recursively."}], "topic": {"title": "Example", "paragraph": [{"math": "n", "#text": "Our example for summing the first  numbers of an array\ncould have been written just as easily using a loop.\nHere is an example of a function that is more naturally written\nusing recursion."}, {"literal": ["Fibonacci(0) = 1", "Fibonacci(1) = 1"], "#text": "The following code computes the Fibonacci sequence for a given number.\nThe Fibonacci Sequence is the series of numbers: 1, 1, 2, 3, 5, 8,\n13, 21, 34, ...\nAny number in the sequence is found by adding up the two numbers\nbefore it.\nThe base cases are that  and\n."}], "raw": {"@format": "xml", "@xml:space": "preserve", "codeinclude": "null"}}}}