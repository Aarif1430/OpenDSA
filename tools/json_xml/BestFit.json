{"document": {"@dupnames": "best\\ fit", "@ids": "best-fit", "@source": "<string>", "@title": "Best Fit", "title": "Best Fit", "subtitle": {"@dupnames": "best\\ fit", "@ids": "id1", "#text": "Best Fit"}, "comment": [{"@xml:space": "preserve", "#text": "This file is part of the OpenDSA eTextbook project. See"}, {"@xml:space": "preserve", "#text": "http://algoviz.org/OpenDSA for more details."}, {"@xml:space": "preserve", "#text": "Copyright (c) 2012-2016 by the OpenDSA Project Contributors, and"}, {"@xml:space": "preserve", "#text": "distributed under an MIT open source license."}], "raw": [{"@format": "xml", "@xml:space": "preserve", "avmetadata": "null"}, {"@format": "xml", "@xml:space": "preserve", "avembed": {"@type": "ss", "@exer_name": "firstFitAV", "@long_name": "firstFitAV", "@points": "0.0", "@required": "True", "@threshold": "1.0"}}], "paragraph": {"title_reference": "best fit", "#text": "There is a potential disadvantage to first fit:\nIt might \"waste\" larger blocks by breaking them up, and so they will\nnot be available for large requests later.\nA strategy that avoids using large blocks unnecessarily is called\n.\nBest fit looks at the entire list and picks the smallest block that\nis at least as large as the request\n(i.e., the \"best\" or closest fit to the request).\nContinuing with the preceding example, the best fit for a request of\n30 units is the block of size 32, leaving a remainder of size 2.\nBest fit has the disadvantage that it requires that the entire list be\nsearched.\nAnother problem is that the remaining portion of the best-fit block\nis likely to be small, and thus useless for future requests.\nIn other words, best fit tends to maximize problems of external\nfragmentation while it minimizes the chance of not being able to\nservice an occasional large request."}}}