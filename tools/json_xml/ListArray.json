{"document": {"@dupnames": "array-based\\ list\\ implementation", "@ids": "array-based-list-implementation", "@source": "<string>", "@title": "Array-Based List Implementation", "title": "Array-Based List Implementation", "comment": [{"@xml:space": "preserve", "#text": "This file is part of the OpenDSA eTextbook project. See"}, {"@xml:space": "preserve", "#text": "http://algoviz.org/OpenDSA for more details."}, {"@xml:space": "preserve", "#text": "Copyright (c) 2012-2016 by the OpenDSA Project Contributors, and"}, {"@xml:space": "preserve", "#text": "distributed under an MIT open source license."}], "raw": [{"@format": "xml", "@xml:space": "preserve", "avmetadata": "null"}, {"@format": "xml", "@xml:space": "preserve", "odsalink": "AV/List/alistCON.css"}], "section": [{"@dupnames": "array-based\\ list\\ implementation", "@ids": "id1", "title": "Array-Based List Implementation", "paragraph": {"literal": ["AList", "AList", "List"], "title_reference": "List ADT <ListADT>", "#text": "Here is an implementation for the array-based list, named .\n inherits from the ,\nand so must implement all of the member functions of ."}, "raw": [{"@format": "xml", "@xml:space": "preserve", "codeinclude": "null"}, {"@format": "xml", "@xml:space": "preserve", "inlineav": {"@type": "ss", "@exer_name": "alistVarsCON", "@long_name": "alistVarsCON", "@points": "0", "@required": "True", "@threshold": "1.0"}}, {"@format": "xml", "@xml:space": "preserve", "inlineav": {"@type": "ss", "@exer_name": "alistIntroCON", "@long_name": "alistIntroCON", "@points": "0", "@required": "True", "@threshold": "1.0"}}], "line_block": {"line": null}, "section": {"@ids": "insert", "@names": "insert", "title": "Insert", "paragraph": {"literal": ["insert", "append", "remove"], "#text": "Because the array-based list implementation is defined to store list\nelements in contiguous cells of the array, the , ,\nand  methods must maintain this property."}, "raw": {"@format": "xml", "@xml:space": "preserve", "inlineav": {"@type": "ss", "@exer_name": "alistInsertCON", "@long_name": "alistInsertCON", "@points": "0", "@required": "True", "@threshold": "1.0"}}}}, {"@ids": "insert-practice-exericse", "@names": "insert\\ practice\\ exericse", "title": "Insert Practice Exericse", "raw": {"@format": "xml", "@xml:space": "preserve", "avembed": {"@type": "ka", "@exer_name": "AlistInsertPRO", "@long_name": "AlistInsertPRO", "@points": "1.0", "@required": "True", "@threshold": "5"}}}, {"@ids": "append-and-remove", "@names": "append\\ and\\ remove", "title": "Append and Remove", "raw": [{"@format": "xml", "@xml:space": "preserve", "inlineav": {"@type": "ss", "@exer_name": "alistAppendCON", "@long_name": "alistAppendCON", "@points": "0", "@required": "True", "@threshold": "1.0"}}, {"@format": "xml", "@xml:space": "preserve", "inlineav": {"@type": "ss", "@exer_name": "alistRemoveCON", "@long_name": "alistRemoveCON", "@points": "0", "@required": "True", "@threshold": "1.0"}}], "paragraph": [{"title_reference": ["i", "n - i - 1"], "#text": "Removing an element from the head of the list is\nsimilar to insert in that all remaining elements  must shift toward\nthe head by one position to fill in the gap.\nIf we want to remove the element at position , then\n elements must shift toward the head, as shown in the\nfollowing slideshow."}, {"title_reference": "Theta(n)", "#text": "In the average case, insertion or removal each requires moving half\nof the elements, which is ."}], "section": {"@ids": "remove-practice-exericise", "@names": "remove\\ practice\\ exericise", "title": "Remove Practice Exericise", "raw": {"@format": "xml", "@xml:space": "preserve", "avembed": {"@type": "ka", "@exer_name": "AlistRemovePRO", "@long_name": "AlistRemovePRO", "@points": "1.0", "@required": "True", "@threshold": "5"}}, "paragraph": {"literal": ["insert", "remove", "clear", "AList"], "title_reference": "Theta(1)", "#text": "Aside from  and , the only other operations that\nmight require more than constant time are the constructor and\n.\nThe other methods for Class  simply\naccess the current list element or move the current position.\nThey all require  time."}}}, {"@ids": "array-based-list-practice-questions", "@names": "array-based\\ list\\ practice\\ questions", "title": "Array-based List Practice Questions", "raw": [{"@format": "xml", "@xml:space": "preserve", "avembed": {"@type": "ka", "@exer_name": "ALSumm", "@long_name": "ALSumm", "@points": "1.0", "@required": "True", "@threshold": "5"}}, {"@format": "xml", "@xml:space": "preserve", "odsascript": "AV/List/alistVarsCON.js"}, {"@format": "xml", "@xml:space": "preserve", "odsascript": "AV/List/alistIntroCON.js"}, {"@format": "xml", "@xml:space": "preserve", "odsascript": "AV/List/alistInsertCON.js"}, {"@format": "xml", "@xml:space": "preserve", "odsascript": "AV/List/alistAppendCON.js"}, {"@format": "xml", "@xml:space": "preserve", "odsascript": "AV/List/alistRemoveCON.js"}]}]}}