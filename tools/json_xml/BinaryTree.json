{"document": {"@ids": "binary-trees", "@names": "binary\\ trees", "@source": "<string>", "@title": "Binary Trees", "title": "Binary Trees", "comment": [{"@xml:space": "preserve", "#text": "This file is part of the OpenDSA eTextbook project. See"}, {"@xml:space": "preserve", "#text": "http://algoviz.org/OpenDSA for more details."}, {"@xml:space": "preserve", "#text": "Copyright (c) 2012-2016 by the OpenDSA Project Contributors, and"}, {"@xml:space": "preserve", "#text": "distributed under an MIT open source license."}], "raw": [{"@format": "xml", "@xml:space": "preserve", "avmetadata": "null"}, {"@format": "xml", "@xml:space": "preserve", "odsalink": "AV/Binary/BinExampCON.css"}, {"@format": "xml", "@xml:space": "preserve", "odsalink": "AV/Binary/BinDiffCON.css"}, {"@format": "xml", "@xml:space": "preserve", "odsalink": "AV/Binary/FullCompCON.css"}], "section": [{"@ids": "definitions-and-properties", "@names": "definitions\\ and\\ properties", "title": "Definitions and Properties", "paragraph": [{"title_reference": ["binary tree", "nodes <node>", "root", "subtrees <subtree>", "children <child>", "edge", "parent"], "#text": "A  is made up of a finite set of elements\ncalled .\nThis set either is empty or consists of a node called the\n together with two binary trees, called the left and\nright\n, which are disjoint from each other and\nfrom the root.\n(Disjoint means that they have no nodes in common.)\nThe roots of these subtrees are\n of the root.\nThere is an  from a node to each of its children,\nand a node is said to be the  of its children."}, {"math": ["n_1, n_2, ..., n_k", "n_i", "n_i+1", "1 \\leq i < k", "n_1", "n_k", "k-1", "R", "M", "R", "M", "M", "R", "M", "M", "d", "d"], "title_reference": ["path", "length", "ancestor", "descendant", "depth", "height", "level", "leaf node", "internal node"], "#text": "If \nis a sequence of nodes in the tree such\nthat  is the parent of\n for ,\nthen this sequence is called a  from\n to .\nThe  of the path is .\nIf there is a path from node  to node ,\nthen  is an  of , and\n is a  of .\nThus, all nodes in the tree are descendants of the root of the tree,\nwhile the root is the ancestor of all nodes.\nThe  of a node  in the tree is the length\nof the path from the root of the tree to .\nThe  of a tree is one more than the depth of the\ndeepest node in the tree.\nAll nodes of depth  are at\n  in the tree.\nThe root is the only node at level 0, and its depth is 0.\nA  is any node that has two empty children.\nAn  is\nany node that has at least one non-empty child."}, {"title_reference": ["Figure #BinExample", "Figure #BinDiff", "Figure #BinDiff"], "emphasis": ["all", "not"], "#text": "Figure  illustrates the various terms used to\nidentify parts of a binary tree.\nFigure  illustrates an important point regarding\nthe structure of binary trees.\nBecause  binary tree nodes have two children\n(one or both of which might be empty), the two binary\ntrees of Figure  are  the same."}, {"title_reference": ["full binary tree <full tree>", "complete binary tree"], "math": ["d", "d-1"], "#text": "Two restricted forms of binary tree are sufficiently\nimportant to warrant special names.\nEach node in a \nis either (1) an internal node with exactly two non-empty children or\n(2) a leaf.\nA  has a restricted shape obtained by\nstarting at the root and filling the tree by levels from left to\nright.\nIn the complete binary tree of height , all levels\nexcept possibly level  are completely full.\nThe bottom level has its nodes filled in from the left side."}, {"title_reference": ["Figure #FullComplete", "Figure #FullComplete", "Figure #FullComplete", "heap <heap> <Heaps>", "Huffman coding tree <Huffman coding tree> <Huffman>"], "footnote_reference": {"@auto": "1", "@ids": "id1", "@refid": "id2", "#text": "1"}, "#text": "Figure  illustrates the differences between\nfull and complete binary trees. \nThere is no particular relationship between these two tree shapes;\nthat is, the tree of Figure  (a) is full\nbut not complete while the tree of Figure \n(b) is\ncomplete but not full.\nThe  data structure is an example\nof a complete binary tree.\nThe \nis an example of a full binary tree."}], "target": [{"@refid": "binexample"}, {"@refid": "bindiff"}, {"@refid": "fullcomplete"}], "raw": [{"@format": "xml", "@ids": "binexample", "@names": "binexample", "@xml:space": "preserve", "inlineav": {"@type": "dgm", "@exer_name": "BinExampCON", "@long_name": "BinExampCON", "@points": "0", "@required": "True", "@threshold": "1.0"}}, {"@format": "xml", "@ids": "bindiff", "@names": "bindiff", "@xml:space": "preserve", "inlineav": {"@type": "dgm", "@exer_name": "BinDiffCON", "@long_name": "BinDiffCON", "@points": "0", "@required": "True", "@threshold": "1.0"}}, {"@format": "xml", "@ids": "fullcomplete", "@names": "fullcomplete", "@xml:space": "preserve", "inlineav": {"@type": "dgm", "@exer_name": "FullCompCON", "@long_name": "FullCompCON", "@points": "0", "@required": "True", "@threshold": "1.0"}}, {"@format": "xml", "@xml:space": "preserve", "avembed": {"@type": "ka", "@exer_name": "DefSumm", "@long_name": "DefSumm", "@points": "1.0", "@required": "True", "@threshold": "5"}}], "footnote": {"@auto": "1", "@backrefs": "id1", "@ids": "id2", "@names": "1", "label": "1", "paragraph": "While these definitions for full and complete binary tree are\nthe ones most commonly used, they are not universal.\nBecause the common meaning of the words \"full\" and \"complete\"\nare quite similar, there is little that you can do to\ndistinguish between them other than to memorize the\ndefinitions.\nHere is a memory aid that you might find useful:\n\"Complete\" is a wider word than \"full\", and complete binary\ntrees tend to be wider than full binary trees because each\nlevel of a complete binary tree is as wide as possible."}}, {"@ids": "practice-questions", "@names": "practice\\ questions", "title": "Practice Questions", "raw": [{"@format": "xml", "@xml:space": "preserve", "avembed": {"@type": "ka", "@exer_name": "Treeprobs", "@long_name": "Treeprobs", "@points": "1.0", "@required": "True", "@threshold": "5"}}, {"@format": "xml", "@xml:space": "preserve", "odsascript": "AV/Binary/BinExampCON.js"}, {"@format": "xml", "@xml:space": "preserve", "odsascript": "AV/Binary/BinDiffCON.js"}, {"@format": "xml", "@xml:space": "preserve", "odsascript": "AV/Binary/FullCompCON.js"}]}]}}