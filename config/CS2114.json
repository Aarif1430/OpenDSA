{
  "title": "CS2114 Spring 2014",
  "build_dir": "Books",
  "code_dir": "SourceCode/Processing",
  "module_origin": "http://algoviz.org",
  "backend_address": "https://opendsa.cc.vt.edu/",
  "build_JSAV": false,
  "build_ODSA": true,
  "allow_anonymous_credit": true,
  "suppress_todo": true,
  "chapters": {
    "Preface": {
      "Intro": {
        "long_name": "How to Use this System",
        "exercises": {}
      }
    },
    "Linear Structures": {
      "List/ListIntro": {
        "long_name": "Chapter Introduction: Linear Structures",
        "exercises": {}
      },
      "List/ListADT": {
        "long_name": "List ADT",
        "exercises": {
          "listADTCON1": {
            "long_name": "List ADT Slideshow 1",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listADTCON2": {
            "long_name": "List ADT Slideshow 2",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "ListADTPROG": {
            "long_name": "List ADT Exercise",
            "required": true,
            "points": 1.0,
            "threshold": 3
          }
        }
      },
      "List/ListArray": {
        "long_name": "Array-based Lists",
        "exercises": {
          "AlistVarsCON": {
            "long_name": "Array-based List Variables",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AlistIntroCON": {
            "long_name": "Array-based List Intro",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
         "AlistInsertCON": {
            "long_name": "Array-based List Insertion",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AlistAppendCON": {
            "long_name": "Array-based List Append",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AlistRemoveCON": {
            "long_name": "Array-based List Remove",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listArrayInsertion": {
            "long_name": "Array-based List Insert Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "listArrayDeletion": {
            "long_name": "Array-based List Delete Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "ArryLstSumm": {
            "long_name": "Array-based List Summary",
            "required": true,
            "points": 1,
            "threshold": 3
          }
        }
      },
      "List/ListLinked": {
        "long_name": "Linked Lists",
        "exercises": {
          "LlistBadCON": {
            "long_name": "Linked List Slideshow 1",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LlistBadReasonCON": {
            "long_name": "Linked List Slideshow 2",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LlistVarsCON": {
            "long_name": "Linked List Variables",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LListCons": {
            "long_name": "Linked List Constructors",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LlistInsertCON": {
            "long_name": "Linked List Insert",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LlistSpecInsertCON": {
            "long_name": "Linked List Special Insert",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LlistRemoveCON": {
            "long_name": "Linked List Remove",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LlistPosCON": {
            "long_name": "Linked List Position",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listLinkedInsertion": {
            "long_name": "Linked List Insert Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "listLinkedDeletion": {
            "long_name": "Linked List Delete Exercise",
            "required": true,
            "points": 2,
            "threshold": 5
          },
          "LstLnkdSumm": {
            "long_name": "Linked List Summary",
            "required": true,
            "points": 2,
            "threshold": 6
          }
        }
      },
      "List/ListAnalysis": {
        "long_name": "Comparison of List Implementations",
        "exercises": {
          "ListOverhead": {
            "long_name": "Breakeven Point Exercise",
            "required": true,
            "points": 1,
            "threshold": 3
          }
	}
      },
      "List/Freelist": {
        "long_name": "Freelists",
        "exercises": {
          "listFreeCON": {
            "long_name": "Freelist Slideshow 1",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "FListInsertCON": {
            "long_name": "Freelist Insert",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          }
        }
      },
      "List/ListDouble": {
        "long_name": "Doubly Linked Lists",
        "exercises": {
          "DLlistInsertCON": {
            "long_name": "Doubly Linked List Insert",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "DLlistAppendCON": {
            "long_name": "Doubly Linked List Append",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "DLlistRemoveCON": {
            "long_name": "Doubly Linked List Remove",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "DLlistRemoveCON": {
            "long_name": "Doubly Linked List Remove",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "DLlistPrevCON": {
            "long_name": "Doubly Linked List Prev",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          }
        }
      },
      "List/ListElement": {
        "long_name": "List Element Implementations",
        "exercises": {
          "listElementDataCON": {
            "long_name": "List Element Data",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listElementTypeCON": {
            "long_name": "List Element Type",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listElementDeleteCON": {
            "long_name": "List Element Delete",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LstSumm": {
            "long_name": "List Summary Questions",
            "required": true,
            "points": 1,
            "threshold": 3
          }
        }
      },
      "List/Stack": {
        "long_name": "Stacks",
        "exercises": {
          "AStackVarCON": {
            "long_name": "Array stack variables",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AStackTopposCON": {
            "long_name": "Array stack top position",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AStackPushCON": {
            "long_name": "Array stack push",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AStackPopCON": {
            "long_name": "Array stack pop",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listAStackPush": {
            "long_name": "Array Stack Push Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "listAStackPop": {
            "long_name": "Array Stack PopExercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "LStackPushCON": {
            "long_name": "Linked stack push",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LStackPopCON": {
            "long_name": "Linked stack pop",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listLStackPush": {
            "long_name": "Linked Stack Push Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "listLStackPop": {
            "long_name": "Linked Stack Pop Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          }
        }
      },
      "List/StackRecur": {
        "long_name": "Implementing Recursion",
        "exercises": {}
      },
      "List/Queue": {
        "long_name": "Queues",
        "exercises": {
          "AQueueFirstNposCON": {
            "long_name": "Array Queue Slideshow 1",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AQueueDriftposCON": {
            "long_name": "Array Queue Drift",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AQueueBadCON": {
            "long_name": "Array Queue Bad",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AQueueCircularCON": {
            "long_name": "Array Queue Circular",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AQueueEmptyFullCON": {
            "long_name": "Array Queue Empty/Full",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "AQueueVarCON": {
            "long_name": "Array Queue Variables",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listAQueueEnqueue": {
            "long_name": "Array Queue Enqueue Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "listAQueueDequeue": {
            "long_name": "Array Queue Dequeue Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "LQueueIntroCON": {
            "long_name": "Linked Queue Intro",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LQueueEnqueueCON": {
            "long_name": "Linked Queue Enqueue",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "LQueueDequeueCON": {
            "long_name": "Linked Queue Dequeue",
            "required": true,
            "points": 0.0,
            "threshold": 1.0
          },
          "listLQueueEnqueue": {
            "long_name": "Linked Queue Enqueue Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "listLQueueDequeue": {
            "long_name": "Linked Queue Dequeue Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          },
          "StckQSumm": {
            "long_name": "Stack/Queue Summary Exercise",
            "required": true,
            "points": 1,
            "threshold": 5
          }
        }
      },
      "List/ListSumm": {
        "long_name": "List Chapter Summary",
        "exercises": {
          "LstChptrSumm": {
            "long_name": "List Chapter Summary Exercise",
            "required": true,
            "points": 2,
            "threshold": 5
          }
        }
      }
    },
    "Stubs": {
      "Stubs": {
        "long_name": "Stubs Chapter",
        "exercises": {}
      },
      "Stubs/Recursion": {
        "long_name": "Recursion",
        "exercises": {}
      },
      "Stubs/Comparison": {
        "long_name": "Comparison",
        "exercises": {}
      },
      "Stubs/SetDef": {
        "long_name": "Set Definitions",
        "exercises": {}
      },
      "Stubs/Quicksort": {
        "long_name": "Quicksort",
        "exercises": {}
      },
      "Stubs/Multilists": {
        "long_name": "Multilists",
        "exercises": {}
      },
      "Stubs/AmortAnal": {
        "long_name": "Amortized Analysis",
        "exercises": {}
      }
    },
    "Binary Trees": {
      "Stubs/Binary": {
        "long_name": "Binary Tree Chapter",
        "exercises": {}
      }
    },
    "Searching": {
      "Stubs/SearchChap": {
        "long_name": "Searching Chapter",
        "exercises": {}
      }
    },
    "Sorting": {
      "Stubs/SortChap": {
        "long_name": "Sorting Chapter",
        "exercises": {}
      }
    },
    "Indexing": {
      "Stubs/IndexChap": {
        "long_name": "Indexing Chapter",
        "exercises": {}
      }
    },
    "Memory Management": {
      "Stubs/MemmanIntro": {
        "long_name": "Memory Management Chapter",
        "exercises": {}
      }
    },
    "File Processing": {
      "Stubs/FileProc": {
        "long_name": "File Processing Chapter",
        "exercises": {}
      }
    },
    "Appendix": {
      "Glossary": {
        "long_name": "Glossary",
        "exercises": {}
      },
      "Bibliography": {
        "long_name": "Bibliography",
        "exercises": {}
      }
    }
  }
}

